from pygame import*
import sys, random


def cargar_animacion(prefijo, sufijo, n):
    images = []
    for i in range(1, n+1):
        name = prefijo + str(i) + sufijo
        images.append(image.load(name))
    return images

def mostrar_animacion(images, freq, x, y):
    frame = int(time.time()*freq) % len(images)
    inicio.blit(images[frame], (x, y))

def dibujar(laberinto):
  draw.line(laberinto,(0,0,0),(50,50),(500,50),5)
  draw.line(laberinto,(0,0,0),(50,50),(50,86),5)
  draw.line(laberinto,(0,0,0),(50,105),(50,480),5)
  draw.line(laberinto,(0,0,0),(50,480),(500,480),5)
  draw.line(laberinto,(0,0,0),(500,450),(500,480),5)
  draw.line(laberinto,(0,0,0),(500,50),(500,428),5)
  
  draw.line(laberinto,(0,0,0),(50,86),(83,86),3)
  draw.line(laberinto,(0,0,0),(109,86),(162,86),3)
  draw.line(laberinto,(0,0,0),(109,86),(109,130),3)
  draw.line(laberinto,(0,0,0),(162,86),(162,50),3)
  draw.line(laberinto,(0,0,0),(50,105),(83,105),3)
  draw.line(laberinto,(0,0,0),(83,105),(83,240),3)
  draw.line(laberinto,(0,0,0),(83,265),(83,345),3)
  draw.line(laberinto,(0,0,0),(83,345),(133,345),3)
  draw.line(laberinto,(0,0,0),(50,372.5),(108,372.5),3)
  draw.line(laberinto,(0,0,0),(108,372.5),(108,400),3)
  draw.line(laberinto,(0,0,0),(108,400),(81.4,400),3)
  draw.line(laberinto,(0,0,0),(81.4,428),(81.4,480),3)
  draw.line(laberinto,(0,0,0),(81.4,428),(135,428),3)
  draw.line(laberinto,(0,0,0),(135,428),(135,320),3)
  draw.line(laberinto,(0,0,0),(135,320),(215,320),3)
  draw.line(laberinto,(0,0,0),(215,350),(215,265),3)
  draw.line(laberinto,(0,0,0),(190,265),(245,265),3)
  draw.line(laberinto,(0,0,0),(109,130),(188,130),3)
  draw.line(laberinto,(0,0,0),(188,130),(188,184),3)
  draw.line(laberinto,(0,0,0),(188,184),(136,184),3)
  draw.line(laberinto,(0,0,0),(136,184),(136,265),3)
  draw.line(laberinto,(0,0,0),(136,265),(165,265),3)
  draw.line(laberinto,(0,0,0),(83,265),(108,265),3)
  draw.line(laberinto,(0,0,0),(108,160),(108,320),3)
  draw.line(laberinto,(0,0,0),(108,160),(161,160),3)
  draw.line(laberinto,(0,0,0),(108,294),(191,294),3)
  draw.line(laberinto,(0,0,0),(190,237),(190,265),3)
  draw.line(laberinto,(0,0,0),(190,237),(162,237),3)
  draw.line(laberinto,(0,0,0),(162,237),(162,213),3)
  draw.line(laberinto,(0,0,0),(162,213),(215,213),3)
  draw.line(laberinto,(0,0,0),(215,105),(215,240),3)
  draw.line(laberinto,(0,0,0),(135,105),(270,105),3)
  draw.line(laberinto,(0,0,0),(270,105),(270,129),3)
  draw.line(laberinto,(0,0,0),(245,129),(270,129),3)
  draw.line(laberinto,(0,0,0),(245,160),(245,265),3)
  draw.line(laberinto,(0,0,0),(245,160),(297,160),3)
  draw.line(laberinto,(0,0,0),(297,77),(297,160),3)
  draw.line(laberinto,(0,0,0),(242,77),(297,77),3)
  draw.line(laberinto,(0,0,0),(190,77),(218,77),3)
  draw.line(laberinto,(0,0,0),(218,50),(218,77),3)
  draw.line(laberinto,(0,0,0),(323,77),(405,77),3)
  draw.line(laberinto,(0,0,0),(323,77),(323,160),3)
  draw.line(laberinto,(0,0,0),(323,160),(352,160),3)
  draw.line(laberinto,(0,0,0),(352,160),(352,130),3)
  draw.line(laberinto,(0,0,0),(379,130),(457,130),3)
  draw.line(laberinto,(0,0,0),(379,130),(379,213),3)
  draw.line(laberinto,(0,0,0),(457,130),(457,267),3)
  draw.line(laberinto,(0,0,0),(457,240),(500,240),3)
  draw.line(laberinto,(0,0,0),(379,213),(323,213),3)
  draw.line(laberinto,(0,0,0),(323,213),(323,294),3)
  draw.line(laberinto,(0,0,0),(243,294),(323,294),3)
  draw.line(laberinto,(0,0,0),(243,294),(243,350),3)
  draw.line(laberinto,(0,0,0),(243,350),(270,350),3)
  draw.line(laberinto,(0,0,0),(270,350),(270,401),3)
  draw.line(laberinto,(0,0,0),(189,401),(270,401),3)
  draw.line(laberinto,(0,0,0),(189,346),(189,401),3)
  draw.line(laberinto,(0,0,0),(189,373),(244,373),3)
  draw.line(laberinto,(0,0,0),(163,346),(163,450),3)
  draw.line(laberinto,(0,0,0),(108,450),(163,450),3)
  draw.line(laberinto,(0,0,0),(189,450),(297,450),3)
  draw.line(laberinto,(0,0,0),(189,428),(189,450),3)
  draw.line(laberinto,(0,0,0),(189,428),(324,428),3)
  draw.line(laberinto,(0,0,0),(324,428),(324,480),3)
  draw.line(laberinto,(0,0,0),(324,400),(324,350),3)
  draw.line(laberinto,(0,0,0),(297,400),(324,400),3)
  draw.line(laberinto,(0,0,0),(297,320),(297,400),3)
  draw.line(laberinto,(0,0,0),(270,320),(352,320),3)
  draw.line(laberinto,(0,0,0),(352,239),(352,320),3)
  draw.line(laberinto,(0,0,0),(352,239),(405,239),3)
  draw.line(laberinto,(0,0,0),(405,158),(405,239),3)
  draw.line(laberinto,(0,0,0),(405,158),(432,158),3)
  draw.line(laberinto,(0,0,0),(432,158),(432,267),3)
  draw.line(laberinto,(0,0,0),(378,267),(432,267),3)
  draw.line(laberinto,(0,0,0),(378,267),(378,348),3)
  draw.line(laberinto,(0,0,0),(378,348),(404,348),3)
  draw.line(laberinto,(0,0,0),(404,348),(404,374),3)
  draw.line(laberinto,(0,0,0),(352,374),(404,374),3)
  draw.line(laberinto,(0,0,0),(352,345),(352,450),3)
  draw.line(laberinto,(0,0,0),(352,450),(500,450),3)
  draw.line(laberinto,(0,0,0),(433,427),(433,450),3)
  draw.line(laberinto,(0,0,0),(379,427),(410,427),3)
  draw.line(laberinto,(0,0,0),(460,427),(500,427),3)
  draw.line(laberinto,(0,0,0),(379,427),(379,401),3)
  draw.line(laberinto,(0,0,0),(379,401),(433,401),3)
  draw.line(laberinto,(0,0,0),(433,401),(433,321),3)
  draw.line(laberinto,(0,0,0),(403,321),(433,321),3)
  draw.line(laberinto,(0,0,0),(403,294),(403,321),3)
  draw.line(laberinto,(0,0,0),(403,294),(459,294),3)
  draw.line(laberinto,(0,0,0),(459,294),(459,321),3)
  draw.line(laberinto,(0,0,0),(433,348),(500,348),3)
  draw.line(laberinto,(0,0,0),(459,427),(459,372),3)
  draw.line(laberinto,(0,0,0),(406,77),(406,104),3)
  draw.line(laberinto,(0,0,0),(356,104),(433,104),3)
  draw.line(laberinto,(0,0,0),(433,104),(433,129),3)
  draw.line(laberinto,(0,0,0),(458,104),(500,104),3)
  draw.line(laberinto,(0,0,0),(458,79),(432,79),3)
  draw.line(laberinto,(0,0,0),(432,50),(432,79),3)
  draw.line(laberinto,(0,0,0),(378,184),(270,184),3)
  draw.line(laberinto,(0,0,0),(270,184),(270,267),3)
  draw.line(laberinto,(0,0,0),(270,267),(297,267),3)
  draw.line(laberinto,(0,0,0),(297,211),(297,267),3)

def chocar_horizontal(x,y):
  if x-8<=50 or x+8>=500 or y-8<=50 or y+8>=480 or (x+6>=50 and x-6<=83 and y-6<=86 and y+6>=86) or (x+6>=109 and x-6<=162 and y-6<=86 and y+6>=86) or (x+6>=50 and x-6<=83 and y-6<=105 and y+6>=105) or (x+6>=83 and x-6<=133 and y-6<=345 and y+6>=345) or (x+6>=50 and x-6<=108 and y-6<=372.5 and y+6>=372.5) or (x+6>=81.4 and x-6<=108 and y-6<=400 and y+6>=400) or (x+6>=81.4 and x-6<=135 and y-6<=428 and y+6>=428) or (x+6>=135 and x-6<=215 and y-6<=320 and y+6>=320) or (x+6>=190 and x-6<=245 and y-6<=265 and y+6>=265) or (x+6>=109 and x-6<=188 and y-6<=130 and y+6>=130) or (x+6>=136 and x-6<=188 and y-6<=184 and y+6>=184) or (x+6>=136 and x-6<=165 and y-6<=265 and y+6>=265) or (x+6>=83 and x-6<=108 and y-6<=265 and y+6>=265) or (x+6>=108 and x-6<=161 and y-6<=160 and y+6>=160) or (x+6>=108 and x-6<=191 and y-6<=294 and y+6>=294) or (x+6>=162 and x-6<=190 and y-6<=237 and y+6>=237) or (x+6>=162 and x-6<=215 and y-6<=213 and y+6>=213) or (x+6>=135 and x-6<=270 and y-6<=105 and y+6>=105) or (x+6>=245 and x-6<=270 and y-6<=129 and y+6>=129) or (x+6>=245 and x-6<=297 and y-6<=160 and y+6>=160) or (x+6>=242 and x-6<=297 and y-6<=77 and y+6>=77) or (x+6>=190 and x-6<=218 and y-6<=77 and y+6>=77) or (x+6>=323 and x-6<=405 and y-6<=77 and y+6>=77) or (x+6>=323 and x-6<=352 and y-6<=160 and y+6>=160) or (x+6>=379 and x-6<=457 and y-6<=130 and y+6>=130) or (x+6>=457 and x-6<=500 and y-6<=240 and y+6>=240) or (x+6>=323 and x-6<=379 and y-6<=213 and y+6>=213) or (x+6>=243 and x-6<=323 and y-6<=294 and y+6>=294) or (x+6>=243 and x-6<=270 and y-6<=350 and y+6>=350) or (x+6>=189 and x-6<=270 and y-6<=401 and y+6>=401) or (x+6>=189 and x-6<=244 and y-6<=373 and y+6>=373) or (x+6>=108 and x-6<=163 and y-6<=450 and y+6>=450) or (x+6>=189 and x-6<=297 and y-6<=450 and y+6>=450) or (x+6>=189 and x-6<=324 and y-6<=428 and y+6>=428) or (x+6>=297 and x-6<=324 and y-6<=400 and y+6>=400) or (x+6>=270 and x-6<=352 and y-6<=320 and y+6>=320) or (x+6>=352 and x-6<=405 and y-6<=239 and y+6>=239) or (x+6>=405 and x-6<=432 and y-6<=158 and y+6>=158) or (x+6>=378 and x-6<=432 and y-6<=267 and y+6>=267) or (x+6>=378 and x-6<=404 and y-6<=348 and y+6>=348) or (x+6>=352 and x-6<=404 and y-6<=374 and y+6>=374) or (x+6>=352 and x-6<=500 and y-6<=450 and y+6>=450) or (x+6>=379 and x-6<=410 and y-6<=427 and y+6>=427) or (x+6>=460 and x-6<=500 and y-6<=427 and y+6>=427) or (x+6>=379 and x-6<=433 and y-6<=401 and y+6>=401) or (x+6>=403 and x-6<=433 and y-6<=321 and y+6>=321) or (x+6>=403 and x-6<=459 and y-6<=294 and y+6>=294) or (x+6>=433 and x-6<=500 and y-6<=348 and y+6>=348) or (x+6>=356 and x-6<=433 and y-6<=104 and y+6>=104) or (x+6>=458 and x-6<=500 and y-6<=104 and y+6>=104) or (x+6>=432 and x-6<=458 and y-6<=79 and y+6>=79) or (x+6>=270 and x-6<=378 and y-6<=184 and y+6>=184) or (x+6>=270 and x-6<=297 and y-6<=267 and y+6>=267):
    return True
  
def chocar_vertical(x,y):
  if (x+6>=109 and x-6<=109 and y-6>=86 and y+6<=130) or (x+6>=162 and x-6<=162 and y-6>=50 and y+6<=86) or (x+6>=83 and x-6<=83 and y-6>=105 and y+6<=240) or (x+6>=83 and x-6<=83 and y-6>=265 and y+6<=345) or (x+6>=108 and x-6<=108 and y-6>=372.5 and y+6<=400) or (x+6>=81.4 and x-6<=81.4 and y-6>=428 and y+6<=480) or (x+6>=135 and x-6<=135 and y-6>=320 and y+6<=428) or (x+6>=215 and x-6<=215 and y-6>=265 and y+6<=350) or (x+6>=188 and x-6<=188 and y-6>=130 and y+6<=184) or (x+6>=136 and x-6<=136 and y-6>=184 and y+6<=265) or (x+6>=108 and x-6<=108 and y-6>=160 and y+6<=320) or (x+6>=190 and x-6<=190 and y-6>=237 and y+6<=265) or (x+6>=162 and x-6<=162 and y-6>=213 and y+6<=237) or (x+6>=215 and x-6<=215 and y-6>=105 and y+6<=240) or (x+6>=270 and x-6<=270 and y-6>=105 and y+6<=129) or (x+6>=245 and x-6<=245 and y-6>=160 and y+6<=265) or (x+6>=297 and x-6<=297 and y-6>=77 and y+6<=160) or (x+6>=218 and x-6<=218 and y-6>=50 and y+6<=77) or (x+6>=323 and x-6<=323 and y-6>=77 and y+6<=160) or (x+6>=352 and x-6<=352 and y-6>=130 and y+6<=160) or (x+6>=379 and x-6<=379 and y-6>=130 and y+6<=213) or (x+6>=457 and x-6<=457 and y-6>=130 and y+6<=267) or (x+6>=323 and x-6<=323 and y-6>=213 and y+6<=294) or (x+6>=243 and x-6<=243 and y-6>=294 and y+6<=350) or (x+6>=270 and x-6<=270 and y-6>=350 and y+6<=401) or (x+6>=189 and x-6<=189 and y-6>=346 and y+6<=401) or (x+6>=163 and x-6<=163 and y-6>=346 and y+6<=450) or (x+6>=189 and x-6<=189 and y-6>=428 and y+6<=450) or (x+6>=324 and x-6<=324 and y-6>=428 and y+6<=480) or (x+6>=324 and x-6<=324 and y-6>=350 and y+6<=400) or (x+6>=297 and x-6<=297 and y-6>=320 and y+6<=400) or (x+6>=352 and x-6<=352 and y-6>=239 and y+6<=320) or (x+6>=405 and x-6<=405 and y-6>=158 and y+6<=239) or (x+6>=432 and x-6<=432 and y-6>=158 and y+6<=267) or (x+6>=378 and x-6<=378 and y-6>=267 and y+6<=348) or (x+6>=404 and x-6<=404 and y-6>=348 and y+6<=374) or (x+6>=352 and x-6<=352 and y-6>=345 and y+6<=450) or (x+6>=433 and x-6<=433 and y-6>=427 and y+6<=450) or (x+6>=379 and x-6<=379 and y-6>=401 and y+6<=427) or (x+6>=433 and x-6<=433 and y-6>=321 and y+6<=401) or (x+6>=403 and x-6<=403 and y-6>=294 and y+6<=321) or (x+6>=459 and x-6<=459 and y-6>=294 and y+6<=321) or (x+6>=459 and x-6<=459 and y-6>=372 and y+6<=427) or (x+6>=406 and x-6<=406 and y-6>=77 and y+6<=104) or (x+6>=433 and x-6<=433 and y-6>=104 and y+6<=129) or (x+6>=432 and x-6<=432 and y-6>=50 and y+6<=79) or (x+6>=270 and x-6<=270 and y-6>=184 and y+6<=267) or (x+6>=297 and x-6<=297 and y-6>=211 and y+6<=267):
    return True
    
